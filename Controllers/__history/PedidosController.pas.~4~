unit PedidosController;

interface

uses
  Pedido, PedidosRepository, Produto;

type
  TPedidosController = class
  private
    FPedido: TPedido;
    FPedidosRepository: TPedidosRepository;
  public
    constructor Create;
    destructor Destroy; override;
    procedure AdicionarProduto(CodigoProduto, Quantidade: Integer; ValorUnitario: Double);
    procedure GravarPedido;
    procedure CarregarPedido(NumeroPedido: Integer);
    procedure CancelarPedido(NumeroPedido: Integer);
  end;

implementation

constructor TPedidosController.Create;
begin
  FPedido := TPedido.Create;
  FPedidosRepository := TPedidosRepository.Create;
end;

destructor TPedidosController.Destroy;
begin
  FPedido.Free;
  FPedidosRepository.Free;
  inherited;
end;

procedure TPedidosController.AdicionarProduto(CodigoProduto, Quantidade: Integer; ValorUnitario: Double);
var
  Produto: TProduto;
begin
  Produto := TProduto.Create;
  Produto.Codigo := CodigoProduto;
  Produto.Descricao := 'Descrição do Produto'; // Buscar do banco de dados
  Produto.PrecoVenda := ValorUnitario;
  FPedido.Produtos.Add(Produto);
  FPedido.ValorTotal := FPedido.ValorTotal + (Quantidade * ValorUnitario);
end;

procedure TPedidosController.GravarPedido;
begin
  FPedidosRepository.GravarPedido(FPedido);
end;

procedure TPedidosController.CarregarPedido(NumeroPedido: Integer);
begin
  FPedido := FPedidosRepository.CarregarPedido(NumeroPedido);
end;

procedure TPedidosController.CancelarPedido(NumeroPedido: Integer);
begin
  FPedidosRepository.CancelarPedido(NumeroPedido);
end;

end.
